diff --git a/gtk/src/hocr/OutputEditorHOCR.cc b/gtk/src/hocr/OutputEditorHOCR.cc
index 1c729e70..7178139c 100644
--- a/gtk/src/hocr/OutputEditorHOCR.cc
+++ b/gtk/src/hocr/OutputEditorHOCR.cc
@@ -972,18 +972,22 @@ void OutputEditorHOCR::pickItem(const Geometry::Point& point) {
 	int pageNr;
 	Glib::ustring filename = MAIN->getDisplayer()->getCurrentImage(pageNr);
 	Gtk::TreeIter pageIndex = m_document->searchPage(filename, pageNr);
-	const HOCRItem* currentItem = m_document->itemAtIndex(pageIndex);
-	if(!currentItem) {
+	const HOCRItem* pageItem = m_document->itemAtIndex(pageIndex);
+	if(!pageItem) {
 		return;
 	}
-	const HOCRPage* page = currentItem->page();
+	const HOCRPage* page = pageItem->page();
 	// Transform point in coordinate space used when page was OCRed
 	double alpha = (page->angle() - MAIN->getDisplayer()->getCurrentAngle()) / 180. * M_PI;
 	double scale = double(page->resolution()) / double(MAIN->getDisplayer()->getCurrentResolution());
 	Geometry::Point newPoint( scale * (point.x * std::cos(alpha) - point.y * std::sin(alpha)) + 0.5 * page->bbox().width,
 	                          scale * (point.x * std::sin(alpha) + point.y * std::cos(alpha)) + 0.5 * page->bbox().height);
-	showItemProperties(m_document->searchAtCanvasPos(pageIndex, newPoint));
-	m_treeView->grab_focus();
+	Gtk::TreeIter index = m_document->searchAtCanvasPos(pageIndex, newPoint);
+	showItemProperties(index);
+	const HOCRItem* item = m_document->itemAtIndex(index);
+	if(item->itemClass() != "ocrx_word" && item->itemClass() != "ocr_line") {
+		m_treeView->grab_focus();
+	}
 }
 
 bool OutputEditorHOCR::open(InsertMode mode, std::vector<Glib::RefPtr<Gio::File>> files) {
